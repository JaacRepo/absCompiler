module CoreArtifact.Tests;

import * from CoreArtifact;
import * from AbsUnit;

[TestClass]
interface ApplicationTest {
	Unit testCalculate(Pair<Int,Int> v);
	
}

[DataPoint] // test data 
def Set<Pair<Int,Int>> getData() = set[Pair(10,55),Pair(20,6765)/*,Pair(30,832040)*/];	


// test class/method
[TestClassImpl]
class ApplicationTest implements ApplicationTest {
	
	ABSAssert helper;
	Application app;
	
	{
		app = new local Application(); // AUT
		helper = new local ABSAssertImpl(); // helper
	}
	
	[Test]
	Unit testCalculate(Pair<Int,Int> v) {
		Int result = app.calculate(fst(v));
		helper.assertTrue(result == snd(v));
	}
	
}


{
	ApplicationTest tester = new local ApplicationTest();
	Set<Pair<Int,Int>> datas = getData();
	while (hasNext(datas)) {
		Pair<Set<Pair<Int,Int>>,Pair<Int,Int>> test = next(datas);
		tester.testCalculate(snd(test));
		datas = fst(test);
	}	
}